{
  "_args": [
    [
      "self-signed",
      "/home/menno/homey/nl.scanno.mqttbroker/node_modules/self-signed"
    ]
  ],
  "_from": "self-signed@latest",
  "_id": "self-signed@1.3.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/self-signed",
  "_npmUser": {
    "email": "skeggse@gmail.com",
    "name": "skeggse"
  },
  "_npmVersion": "1.3.14",
  "_phantomChildren": {},
  "_requested": {
    "name": "self-signed",
    "raw": "self-signed",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/self-signed/-/self-signed-1.3.1.tgz",
  "_shasum": "24a6363adf74ae9eeec0bcfdf6e60eae2eb8c509",
  "_shrinkwrap": null,
  "_spec": "self-signed",
  "_where": "/home/menno/homey/nl.scanno.mqttbroker/node_modules/self-signed",
  "author": {
    "email": "jfromaniello@gmail.com",
    "name": "Jos√© F. Romaniello",
    "url": "http://joseoncode.com"
  },
  "bugs": {
    "url": "https://github.com/globesherpa/self-signed/issues"
  },
  "contributors": [
    {
      "email": "paolo@async.ly",
      "name": "Paolo Fragomeni",
      "url": "http://async.ly"
    },
    {
      "email": "eskeggs@globesherpa.com",
      "name": "Eli Skeggs"
    }
  ],
  "dependencies": {
    "node-forge": "~0.2.0"
  },
  "description": "Generate self-signed certificates, private, and public keys",
  "devDependencies": {
    "expect.js": "~0.2.0",
    "mocha": "~1.15.1",
    "temp": "~0.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "24a6363adf74ae9eeec0bcfdf6e60eae2eb8c509",
    "tarball": "https://registry.npmjs.org/self-signed/-/self-signed-1.3.1.tgz"
  },
  "homepage": "https://github.com/globesherpa/self-signed",
  "keywords": [
    "openssl",
    "self",
    "signed",
    "certificates"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "email": "skeggse@gmail.com",
      "name": "skeggse"
    }
  ],
  "name": "self-signed",
  "optionalDependencies": {},
  "readme": "Generate a self signed x509 certificate from node.js.\n\n[![Build Status](https://travis-ci.org/globesherpa/self-signed.png)](https://travis-ci.org/globesherpa/self-signed)\n\n## Install\n\n```bash\n$ npm install self-signed\n```\n\n## Test\n\nRun any of the following:\n\n```bash\n$ npm test\n$ make test\n$ mocha\n```\n\n*Note: Don't forget to `npm install`!*\n\n## Usage\n\n```js\nvar generate = require('self-signed');\n\nvar pems = generate({\n  name: 'example.com',\n  city: 'Blacksburg',\n  state: 'Virginia',\n  organization: 'Test',\n  unit: 'Test'\n}, {\n  keySize: 1024, // default\n  expire: 2 * 365 * 24 * 60 * 60 * 1000 // defaults to exactly 1 year\n});\n\nconsole.log(pems);\n```\n\nWill log an object with `private`, `public` and `cert` properties.\n\n```js\n{\n  private: '-----BEGIN RSA PRIVATE KEY-----\\r\\nMIICXAIBAAKBgQCBFMXMYS/+RZz6+qzv+xeqXPdjw4YKZC4y3dPhSwgEwkecrCTX\\r\\nsR6boue+1MjIqPqWggXZnotIGldfEN0kn0Jbh2vMTrTx6YwqQ8tceBPoyuuqcYBO\\r\\nOONAcKOB3MLnZbyOgVtbyT3j68JE5V/lx6LhpIKAgY0m5WIuaKrW6mvLXQIDAQAB\\r\\nAoGAU6ODGxAqSecPdayyG/ml9vSwNAuAMgGB0eHcpZG5i2PbhRAh+0TAIXaoFQXJ\\r\\naAPeA2ISqlTJyRmQXYAO2uj61FzeyDzYCf0z3+yZEVz3cO7jB5Pl6iBvzbxWuuuA\\r\\ncbJtWLhWtW5/jioc8F0EAzZ+lkC/XuVJdwKHDmwt2qvJO+ECQQD+dvo1g3Sz9xGw\\r\\n21n+fDG5i4128+Qh+JPgh5AeLuXSofc1HMHaOXcC6Wu/Cloh7QAD934b7W0A7VoD\\r\\ndLd/JLyFAkEAgdwjryyvdhy69e516IrPB3b+m4rggtntBlZREMrk9tOzeIucVO3W\\r\\ntKI3FHm6JebN2gVcG+rZ+FaDPo+ifJkW+QJBAPojrMwEACmUevB2f9246gxx0UsY\\r\\nbq6yM3No71OsWEEY8/Bi53CEQqg7Gq5+F6H33qcHmBEN8LQTngN9rY+vZh0CQBg0\\r\\nqJImii5B/LeK03+dICoMDDmCEYdSh9P+ku3GZBd+Lp3xqBpMmxDgi9PNPN2DwCs7\\r\\nhIfPpwGbXqtyqp7/CkECQB4OdY+2FbCciI473eQkTu310RMf8jElU63iwnx4R/XN\\r\\n/mgqN589OfF4SS0U/MoRzYk9jF9IAJN1Mi/571T+nw4=\\r\\n-----END RSA PRIVATE KEY-----\\r\\n',\n\n  public: '-----BEGIN PUBLIC KEY-----\\r\\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCBFMXMYS/+RZz6+qzv+xeqXPdj\\r\\nw4YKZC4y3dPhSwgEwkecrCTXsR6boue+1MjIqPqWggXZnotIGldfEN0kn0Jbh2vM\\r\\nTrTx6YwqQ8tceBPoyuuqcYBOOONAcKOB3MLnZbyOgVtbyT3j68JE5V/lx6LhpIKA\\r\\ngY0m5WIuaKrW6mvLXQIDAQAB\\r\\n-----END PUBLIC KEY-----\\r\\n',\n\n  cert: '-----BEGIN CERTIFICATE-----\\r\\nMIICjTCCAfagAwIBAgIBATANBgkqhkiG9w0BAQUFADBpMRQwEgYDVQQDEwtleGFt\\r\\ncGxlLm9yZzELMAkGA1UEBhMCVVMxETAPBgNVBAgTCFZpcmdpbmlhMRMwEQYDVQQH\\r\\nEwpCbGFja3NidXJnMQ0wCwYDVQQKEwRUZXN0MQ0wCwYDVQQLEwRUZXN0MB4XDTEz\\r\\nMDgxMzA1NDAyN1oXDTE0MDgxMzA1NDAyN1owaTEUMBIGA1UEAxMLZXhhbXBsZS5v\\r\\ncmcxCzAJBgNVBAYTAlVTMREwDwYDVQQIEwhWaXJnaW5pYTETMBEGA1UEBxMKQmxh\\r\\nY2tzYnVyZzENMAsGA1UEChMEVGVzdDENMAsGA1UECxMEVGVzdDCBnzANBgkqhkiG\\r\\n9w0BAQEFAAOBjQAwgYkCgYEAgRTFzGEv/kWc+vqs7/sXqlz3Y8OGCmQuMt3T4UsI\\r\\nBMJHnKwk17Eem6LnvtTIyKj6loIF2Z6LSBpXXxDdJJ9CW4drzE608emMKkPLXHgT\\r\\n6MrrqnGATjjjQHCjgdzC52W8joFbW8k94+vCROVf5cei4aSCgIGNJuViLmiq1upr\\r\\ny10CAwEAAaNFMEMwDAYDVR0TBAUwAwEB/zALBgNVHQ8EBAMCAvQwJgYDVR0RBB8w\\r\\nHYYbaHR0cDovL2V4YW1wbGUub3JnL3dlYmlkI21lMA0GCSqGSIb3DQEBBQUAA4GB\\r\\nAC9hGQlDh8anNo1YDJdG2mYqOQ5uybJV++kixblGaOkoDROPsWepUpL6kMDUtbAM\\r\\n4uXTyFkvlUQSaQkhNgOY5w/BRIAkCIu6u4D4XcjlCdwFq6vcKMEuWTHMAlBWFla3\\r\\nXJZAPO10PHuDen7JeMOUf1Re7lRFtwfRGAvVYmrvYFKv\\r\\n-----END CERTIFICATE-----\\r\\n'\n}\n```\n\n### Attributes\n\nSupports attributes using a simplified syntax.\n\n```js\nvar generate = require('self-signed');\n\nvar pems = generate({\n  name: 'example.com', // the common name\n  country: 'US', // default\n  city: 'Blacksburg',\n  state: 'Virginia',\n  organization: 'Test',\n  unit: 'Test' // the organizational unit (e.g. department)\n});\nconsole.log(pems);\n```\n\n### Full Options\n\nSupports `keySize`, `serial`, `expire`, `alt`, `pkcs7`\n\n```js\nvar pems = generate(null, {\n  keySize: 2048, // defaults to 1024\n  serial: '329485', // defaults to '01'\n  expire: new Date('10 December 2100'), // defaults to one year from today\n  pkcs7: true, // defaults to false, indicates whether to protect with PKCS#7\n  alt: [] // default undefined, alternate names if array of objects/strings\n});\n```\n\n#### Expire\n\nExpire can be specified as:\n\n* a Date object\n* a string timestamp to be passed to the Date constructor\n* a number representing milliseconds from `now`\n\nIf the `expire` option matches none of these, it defaults to `new Date` plus one year.\n\n#### Alternate names\n\nThe `alt` specifies alternate names that apply to the certificate. Currently autodetects IP addresses,\n\nAllowed formats include:\n\n* `['127.0.0.1', 'http://www.example.org']`\n* `[{type: Number, value: *}, {type: 7, ip: '127.0.0.1'}, {type: 6, value: 'http://example.org'}]`\n\n## Example\n\n### Creating an HTTPS Server and Making Verified Requests\n\n```js\nvar keypair = require('..');\n\nvar https = require('https');\nvar portfinder = require('portfinder'); // you'll need to install this to test\n\ncreateServer(function(err, server) {\n  if (err) {\n    throw err;\n  }\n  var raw = 'hello, world!', body = new Buffer(raw);\n  server.on('request', function(req, res) {\n    res.writeHead(200, {\n      'content-length': body.length,\n      'content-type': 'text/plain'\n    });\n    res.end(body);\n  });\n  request({\n    port: server.port,\n    ca: [server.cert]\n  }, function(err, data) {\n    server.close();\n    if (err) {\n      throw err;\n    }\n    console.log('success:', data.toString() === raw);\n  });\n});\n\n// easy-to-use wrapper\nfunction createServer(callback) {\n  var options = keypair({\n    name: 'localhost',\n    city: 'Blacksburg',\n    state: 'Virginia',\n    organization: 'Test',\n    unit: 'Test'\n  }, {\n    alt: ['127.0.0.1']\n  });\n\n  // server automatically sets up a .cert property\n  var server = https.createServer({\n    key: options.private,\n    cert: options.cert\n  });\n\n  portfinder.getPort(function(err, port) {\n    if (err) {\n      return callback(err);\n    }\n    server.port = port;\n    server.listen(port, 'localhost', function() {\n      callback(null, server);\n    });\n  });\n\n  return server;\n}\n\nfunction request(options, callback) {\n  options.hostname = 'localhost';\n  options.path = '/';\n  var req = https.get(options, function(res) {\n    res.on('error', callback);\n\n    var data = [], length = 0;\n    res.on('data', function(chunk) {\n      data.push(chunk);\n      length += chunk.length;\n    });\n    res.on('end', function() {\n      callback(null, Buffer.concat(data, length));\n    });\n  });\n  req.on('error', callback);\n}\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/globesherpa/self-signed.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.3.1"
}
